<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20170108171605.1" a="E"><vh>@settings</vh>
<v t="yen.20170108171605.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20170108171605.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20170108171622.1"><vh>有關 2017springcd</vh></v>
<v t="yen.20170108171733.1" a="E"><vh>@path ../</vh>
<v t="yen.20170108171733.2"><vh>@button pelican-blog</vh></v>
<v t="yen.20170108171733.3"><vh>@edit README.md</vh></v>
<v t="yen.20170108171733.4"><vh>@edit .gitignore</vh></v>
<v t="yen.20170108171733.5" a="E"><vh>Pelican 設定</vh>
<v t="yen.20170108171733.6"><vh>@edit local_publishconf.py</vh></v>
<v t="yen.20170108171733.7"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="yen.20170215103217.1"><vh>編輯 template</vh>
<v t="yen.20170215103228.1" a="E"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="yen.20170215103332.1"><vh>@edit base.html</vh></v>
</v>
</v>
<v t="leo.20170427044749.1" a="E"><vh>@clean index.html</vh>
<v t="leo.20170427044749.2" a="E"><vh>html</vh>
<v t="leo.20170427044749.3"><vh>head</vh></v>
<v t="leo.20170427044749.4" a="E"><vh>body</vh>
<v t="leo.20170427044749.5" a="E"><vh>reveal div</vh>
<v t="leo.20170427044749.6" a="E"><vh>slides div</vh>
<v t="leo.20170427044749.7" a="E"><vh>封面投影片</vh>
<v t="leo.20170427044749.8"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20170427044749.9"><vh>連結</vh>
<v t="leo.20170427044749.10" a="E"><vh>個人連結</vh>
<v t="leo.20170427044749.11"><vh>個人連結</vh></v>
</v>
</v>
<v t="leo.20170427044749.15"><vh>W1</vh>
<v t="leo.20170427044749.16" a="E"><vh>標題</vh>
<v t="leo.20170427044749.17"><vh>第一周</vh></v>
</v>
<v t="leo.20170427044749.18" a="E"><vh>標題</vh>
<v t="leo.20170427044749.19"><vh>4bar</vh></v>
</v>
<v t="leo.20170427044749.20"><vh>四連桿機構</vh>
<v t="leo.20170427044749.21"><vh>影片</vh></v>
</v>
<v t="leo.20170427050004.1"><vh>長度30連桿</vh>
<v t="leo.20170427050004.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050005.1"><vh>長度50連桿</vh>
<v t="leo.20170427050005.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050007.1"><vh>長度60連桿</vh>
<v t="leo.20170427050007.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050155.1"><vh>四連桿組合</vh>
<v t="leo.20170427050155.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050156.1"><vh>Onshape四連桿機構</vh>
<v t="leo.20170427050156.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050157.1"><vh>長度30連桿</vh>
<v t="leo.20170427050157.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050200.1"><vh>長度50連桿</vh>
<v t="leo.20170427050200.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050008.1"><vh>長度60連桿</vh>
<v t="leo.20170427050008.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050010.1"><vh>四連桿組合</vh>
<v t="leo.20170427050010.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050611.1"><vh>心得</vh>
<v t="leo.20170427050611.2"><vh>影片</vh></v>
</v>
</v>
<v t="leo.20170427045700.1"><vh>W2</vh>
<v t="leo.20170427045700.2" a="E"><vh>標題</vh>
<v t="leo.20170427045700.3"><vh>第二周</vh></v>
</v>
<v t="leo.20170427045700.4" a="E"><vh>標題</vh>
<v t="leo.20170427045700.5"><vh>4bar</vh></v>
</v>
<v t="leo.20170427045700.6"><vh>四連桿機構</vh>
<v t="leo.20170427045700.7"><vh>影片</vh></v>
</v>
<v t="leo.20170427050938.1"><vh>長度30連桿</vh>
<v t="leo.20170427050938.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050939.1"><vh>長度50連桿</vh>
<v t="leo.20170427050939.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050940.1"><vh>長度60連桿</vh>
<v t="leo.20170427050940.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427050941.1"><vh>四連桿組合</vh>
<v t="leo.20170427050941.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427051123.1"><vh>v-rep應用</vh>
<v t="leo.20170427051123.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427051124.1"><vh>心得</vh>
<v t="leo.20170427051124.2"><vh>心得</vh></v>
</v>
</v>
<v t="leo.20170427044749.22"><vh>W3</vh>
<v t="leo.20170427044749.23" a="E"><vh>標題</vh>
<v t="leo.20170427044749.24"><vh>第三週</vh></v>
</v>
<v t="leo.20170427044749.25" a="E"><vh>標題</vh>
<v t="leo.20170427044749.26"><vh>內容</vh></v>
</v>
<v t="leo.20170427052109.1"><vh>Fossil SCM與Stunnel 啟動</vh>
<v t="leo.20170427052109.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427052245.1"><vh>Solvespace四連桿三角形頂點運動軌跡</vh>
<v t="leo.20170427052245.2"><vh>內容</vh></v>
</v>
<v t="leo.20170427052350.1"><vh>Solvespace四連桿三角形頂點運動軌跡</vh>
<v t="leo.20170427052350.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427052419.1"><vh>excel</vh>
<v t="leo.20170427052419.2"><vh>內容</vh></v>
</v>
<v t="leo.20170427052421.1"><vh>excel</vh>
<v t="leo.20170427052421.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427052128.1"><vh>Hyperworks1</vh>
<v t="leo.20170427052128.2"><vh>Hyperworks1</vh></v>
</v>
<v t="leo.20170427044749.29"><vh>Hyperworks1</vh>
<v t="leo.20170427044749.30"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427061628.1"><vh>Hyperworks1</vh>
<v t="leo.20170427061628.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427051748.1"><vh>Hyperworks1</vh>
<v t="leo.20170427051748.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427061708.1"><vh>Hyperworks1</vh>
<v t="leo.20170427061708.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427051802.1"><vh>Hyperworks1</vh>
<v t="leo.20170427051802.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427061733.1"><vh>Hyperworks1</vh>
<v t="leo.20170427061733.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427044749.31"><vh>Hyperworks3</vh>
<v t="leo.20170427044749.32"><vh>Hyperworks3		</vh></v>
</v>
<v t="leo.20170427044749.33"><vh>Hyperworks3</vh>
<v t="leo.20170427044749.34"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427061809.1"><vh>Hyperworks3</vh>
<v t="leo.20170427061809.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427051902.1"><vh>Hyperworks3</vh>
<v t="leo.20170427051902.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427061832.1"><vh>Hyperworks3</vh>
<v t="leo.20170427061832.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427051906.1" a="E"><vh>Hyperworks3</vh>
<v t="leo.20170427051906.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427061918.1" a="E"><vh>Hyperworks3</vh>
<v t="leo.20170427061918.2"><vh>逐字稿</vh></v>
</v>
<v t="leo.20170427052538.1"><vh>V-rep</vh>
<v t="leo.20170427052538.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427052545.1"><vh>V-rep</vh>
<v t="leo.20170427052545.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427052633.1"><vh>心得</vh>
<v t="leo.20170427052633.2"><vh>影片</vh></v>
</v>
</v>
<v t="leo.20170427052716.1"><vh>W4</vh>
<v t="leo.20170427052716.2"><vh>標題</vh>
<v t="leo.20170427052716.3"><vh>第四週</vh></v>
</v>
<v t="leo.20170427052716.4"><vh>標題</vh>
<v t="leo.20170427052716.5"><vh>內容</vh></v>
</v>
<v t="leo.20170427052716.6" a="E"><vh>單連桿繪製與導入V-rep</vh>
<v t="leo.20170427052716.7"><vh>內容</vh></v>
</v>
<v t="leo.20170427052716.8" a="E"><vh>長度30連桿</vh>
<v t="leo.20170427052716.9"><vh>影片</vh></v>
</v>
<v t="leo.20170427052716.10"><vh>長度50連桿</vh>
<v t="leo.20170427052716.11"><vh>影片</vh></v>
</v>
<v t="leo.20170427052716.12"><vh>直徑5的連桿</vh>
<v t="leo.20170427052716.13"><vh>影片</vh></v>
</v>
<v t="leo.20170427052716.14"><vh>導入V-rep</vh>
<v t="leo.20170427052716.15"><vh>影片</vh></v>
</v>
<v t="leo.20170427052716.16"><vh>V-rep模擬</vh>
<v t="leo.20170427052716.17"><vh>影片</vh></v>
</v>
<v t="leo.20170427052716.18"><vh>Hyperworks安裝心得</vh>
<v t="leo.20170427052716.19"><vh>Hyperworks安裝心得</vh></v>
</v>
<v t="leo.20170427052716.36"><vh>心得</vh>
<v t="leo.20170427052716.37"><vh>心得</vh></v>
</v>
</v>
<v t="leo.20170427052717.1"><vh>W5</vh>
<v t="leo.20170427052717.2"><vh>標題</vh>
<v t="leo.20170427052717.3"><vh>第五週</vh></v>
</v>
<v t="leo.20170427052717.4"><vh>標題</vh>
<v t="leo.20170427052717.5"><vh>內容</vh></v>
</v>
<v t="leo.20170427052717.6"><vh>單連桿影片</vh>
<v t="leo.20170427052717.7"><vh>影片</vh></v>
</v>
<v t="leo.20170427052717.36"><vh>心得</vh>
<v t="leo.20170427052717.37"><vh>心得</vh></v>
</v>
</v>
<v t="leo.20170427052730.1"><vh>W6</vh>
<v t="leo.20170427052730.2"><vh>標題</vh>
<v t="leo.20170427052730.3"><vh>第六週</vh></v>
</v>
<v t="leo.20170427052730.4"><vh>標題</vh>
<v t="leo.20170427052730.5"><vh>內容</vh></v>
</v>
<v t="leo.20170427052730.6"><vh>四連桿影片-桿件20</vh>
<v t="leo.20170427052730.7"><vh>影片</vh></v>
</v>
<v t="leo.20170427052730.8"><vh>桿件30</vh>
<v t="leo.20170427052730.9"><vh>影片</vh></v>
</v>
<v t="leo.20170427052730.10"><vh>桿件50</vh>
<v t="leo.20170427052730.11"><vh>影片</vh></v>
</v>
<v t="leo.20170427054313.1"><vh>桿件60</vh>
<v t="leo.20170427054313.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427054315.1"><vh>桿件組合</vh>
<v t="leo.20170427054315.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427054316.1"><vh>V-rep模擬</vh>
<v t="leo.20170427054316.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427054318.1"><vh>八連桿影片</vh>
<v t="leo.20170427054318.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427054523.1"><vh>桿件繪製(二)</vh>
<v t="leo.20170427054523.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427054556.1"><vh>桿件組合</vh>
<v t="leo.20170427054556.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427054557.1"><vh>V-rep模擬</vh>
<v t="leo.20170427054557.2"><vh>影片</vh></v>
</v>
<v t="leo.20170427052730.36"><vh>心得</vh>
<v t="leo.20170427052730.37"><vh>影片</vh></v>
</v>
</v>
<v t="leo.20170427052732.1"><vh>W8</vh>
<v t="leo.20170427052732.2"><vh>標題</vh>
<v t="leo.20170427052732.3"><vh>第七週</vh></v>
</v>
<v t="leo.20170427052732.4"><vh>標題</vh>
<v t="leo.20170427052732.5"><vh>內容</vh></v>
</v>
<v t="leo.20170427052732.6"><vh>導入 STL 3D圖檔</vh>
<v t="leo.20170427052732.7"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055427.1"><vh>可先調整圖的位置</vh>
<v t="leo.20170427055427.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055428.1"><vh>分解組合圖</vh>
<v t="leo.20170427055428.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055429.1"><vh>分解組合圖</vh>
<v t="leo.20170427055429.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055431.1"><vh>導入圓柱</vh>
<v t="leo.20170427055431.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055432.1"><vh>導入圓柱</vh>
<v t="leo.20170427055432.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055434.1"><vh>將圓柱與軸對齊中心</vh>
<v t="leo.20170427055434.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055632.1"><vh>將圓柱與軸對齊中心</vh>
<v t="leo.20170427055632.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055634.1"><vh>調整軸轉動的速度</vh>
<v t="leo.20170427055634.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055654.1"><vh>調整軸轉動的速度</vh>
<v t="leo.20170427055654.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055655.1"><vh>調整桿件設定</vh>
<v t="leo.20170427055655.2"><vh>圖片</vh></v>
</v>
<v t="leo.20170427055819.1"><vh>模擬</vh>
<v t="leo.20170427055819.2"><vh>圖片</vh></v>
</v>
</v>
<v t="leo.20170427052734.1"><vh>W9</vh>
<v t="leo.20170427052734.2"><vh>標題</vh>
<v t="leo.20170427052734.3"><vh>第九週</vh></v>
</v>
<v t="leo.20170427052734.4"><vh>標題</vh>
<v t="leo.20170427052734.5"><vh>內容</vh></v>
</v>
<v t="leo.20170427052734.6"><vh>Fossil SCM與Stunnel 啟動</vh>
<v t="leo.20170427052734.7"><vh>影片</vh></v>
</v>
<v t="leo.20170427052734.8"><vh>四連桿機構協同 Trace Point 查驗</vh>
<v t="leo.20170427052734.9"><vh>影片</vh></v>
</v>
<v t="leo.20170427052734.10"><vh>四連桿機構協同 Trace Point 查驗</vh>
<v t="leo.20170427052734.11"><vh>圖片</vh></v>
</v>
<v t="leo.20170427052734.12"><vh>四連桿機構協同 Trace Point 查驗</vh>
<v t="leo.20170427052734.13"><vh>excel</vh></v>
</v>
<v t="leo.20170427052734.14"><vh>第二種尺寸修改</vh>
<v t="leo.20170427052734.15"><vh>影片</vh></v>
</v>
<v t="leo.20170427052734.16"><vh>第二種尺寸修改</vh>
<v t="leo.20170427052734.17"><vh>圖片</vh></v>
</v>
<v t="leo.20170427052734.18"><vh>第二種尺寸修改</vh>
<v t="leo.20170427052734.19"><vh>excel</vh></v>
</v>
<v t="leo.20170427052734.20"><vh>Fourbar Walker</vh>
<v t="leo.20170427052734.21"><vh>圖片</vh></v>
</v>
<v t="leo.20170427052734.22"><vh>Fourbar Walker</vh>
<v t="leo.20170427052734.23"><vh>影片</vh></v>
</v>
<v t="leo.20170427052734.24"><vh>Fourbar Walker</vh>
<v t="leo.20170427052734.25"><vh>影片</vh></v>
</v>
<v t="leo.20170427052734.26"><vh>Fourbar Walker</vh>
<v t="leo.20170427052734.27"><vh>影片</vh></v>
</v>
<v t="leo.20170427052734.28"><vh>組裝</vh>
<v t="leo.20170427052734.29"><vh>影片</vh></v>
</v>
<v t="leo.20170427052734.30"><vh>模擬</vh>
<v t="leo.20170427052734.31"><vh>影片</vh></v>
</v>
</v>
<v t="leo.20170608093444.1" a="E"><vh>W16</vh>
<v t="leo.20170608093444.2" a="E"><vh>標題</vh>
<v t="leo.20170608093444.3"><vh>第九週</vh></v>
</v>
<v t="leo.20170608093444.4" a="E"><vh>標題</vh>
<v t="leo.20170608093444.5"><vh>內容</vh></v>
</v>
<v t="leo.20170608093444.6" a="E"><vh>評分依據</vh>
<v t="leo.20170608093444.7"><vh>影片</vh></v>
</v>
<v t="leo.20170608093444.8" a="E"><vh>評分依據</vh>
<v t="leo.20170608093444.9"><vh>影片</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.71" a="E"><vh>@path content</vh>
<v t="leo.20170511085025.1"><vh>@edit 20170601.md</vh></v>
<v t="leo.20170601083405.1"><vh>@edit 20170525.md</vh></v>
<v t="leo.20170601083217.1"><vh>@edit 20170518.md</vh></v>
<v t="leo.20170518115152.1"><vh>@edit 20170511.md</vh></v>
<v t="leo.20170427062853.1"><vh>@edit 20170427.md</vh></v>
<v t="leo.20170427064204.1"><vh>@edit 20170420.md</vh></v>
<v t="leo.20170504093615.1"><vh>@edit 20170418.md</vh></v>
<v t="leo.20170427062906.1"><vh>@edit 20170330.md</vh></v>
<v t="leo.20170427062926.1"><vh>@edit 20170323.md</vh></v>
<v t="leo.20170427062932.1"><vh>@edit 20170316.md</vh></v>
<v t="leo.20170427062939.1"><vh>@edit 20170309.md</vh></v>
<v t="leo.20170427062944.1"><vh>@edit 20170302.md</vh></v>
<v t="leo.20170427062950.1"><vh>@edit 20170223.md</vh></v>
<v t="yen.20170108171733.81" a="E"><vh>@path pages</vh>
<v t="leo.20170406084347.1"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="yen.20170108171733.83"><vh>產生 .key 與 .crt</vh></v>
</v>
<v t="yen.20170108171930.1"><vh>@button https server</vh></v>
<v t="yen.20170108171939.1"><vh>@button ipv6 https server</vh></v>
<v t="yen.20170120212350.1" a="E"><vh>programs</vh>
<v t="yen.20170210153828.1" a="E"><vh>v-rep rempte api</vh>
<v t="yen.20170210202015.1"><vh>Python remote API</vh></v>
<v t="yen.20170210170248.1"><vh>line tracer</vh></v>
<v t="yen.20170210222733.1"><vh>line tracer2</vh></v>
<v t="yen.20170210172100.1"><vh>three-link robot</vh></v>
<v t="yen.20170210221519.1"><vh>bubble</vh></v>
</v>
<v t="yen.20170120212354.1"><vh>calendar ex1</vh></v>
<v t="yen.20170120212520.1"><vh>calendar ex2</vh></v>
<v t="yen.20170120232548.1"><vh>calendar example</vh></v>
<v t="yen.20170123204227.1"><vh>印出月曆以及各課程上課日期</vh></v>
<v t="yen.20170207092354.1"><vh>協同程式參考</vh></v>
<v t="yen.20170124102405.1" a="E"><vh>chat</vh>
<v t="yen.20170124102433.1"><vh>index.html</vh></v>
</v>
</v>
<v t="yen.20170209024032.1"><vh>reference</vh></v>
</vnodes>
<tnodes>
<t tx="leo.20170427044749.1">@language xml
@tabwidth -4
@others

</t>
<t tx="leo.20170427044749.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427044749.11">##個人連結

###[Github](https://github.com/40423104/2017springcd_hw)

###[vimeo](https://vimeo.com/user44900188)

###[網誌](https://40423104.github.io/2017springcd_hw/blog/)</t>
<t tx="leo.20170427044749.15">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427044749.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427044749.17"># 第一週
</t>
<t tx="leo.20170427044749.18">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427044749.19">##Solvespace四連桿機構
##Onshape四連桿機構</t>
<t tx="leo.20170427044749.2">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="leo.20170427044749.20">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427044749.21">###Solvespace四連桿機構

&lt;iframe src="https://player.vimeo.com/video/206347595" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427044749.22">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427044749.23">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427044749.24"># 第三週</t>
<t tx="leo.20170427044749.25">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427044749.26">##Fossil SCM與Stunnel 啟動
##Hyperworks翻譯
##Solvespace四連桿三角形頂點運動軌跡</t>
<t tx="leo.20170427044749.29">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427044749.3">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
2017 Spring 機械設計工程系協同產品設計實習
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/reveal.css"&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/theme/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/lib/css/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://cad-lab.github.io/cadlab_data/reveal/css/print/pdf.css' : 'https://cad-lab.github.io/cadlab_data/reveal/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="leo.20170427044749.30">&lt;h3&gt;逐字稿&lt;/h3&gt;
&lt;p&gt;In the 2017 release, we followed our vision and implement a lot more features, delivering more technology for your HyperWorks units investment.&lt;/p&gt;
&lt;p&gt;在2017年版本中，我們遵循了我們的願景並實施了更多功能，為您的HyperWorks提供更多技術。&lt;/p&gt;
&lt;p&gt;In our continuous development, we focused, as# always, on simulation-driven innovation, adding more optimization technology. &lt;/p&gt;
&lt;p&gt;在我們的不斷發展中，我們一如既往地專注於模擬驅動的創新，增加更多的優化技術。&lt;/p&gt;
</t>
<t tx="leo.20170427044749.31">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427044749.32">###Hyperworks3
&lt;iframe src="https://player.vimeo.com/video/207229503" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427044749.33">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427044749.34">&lt;h3&gt;逐字稿&lt;/h3&gt;
&lt;p&gt;In OptiStruct, one of our focus areas is nonlinear large deformation analysis.&lt;/p&gt;
&lt;p&gt;在OptiStruct中，我們的一個重點領域是非線性大變形分析。 &lt;/p&gt;
&lt;p&gt;And in 2017 we added nonlinear transient analysis.&lt;/p&gt;
&lt;p&gt;在2017年，我們添加了非線性瞬態分析&lt;/p&gt;
&lt;p&gt;The main purpose was to couple AcuSolve to do fluid-structure interaction.&lt;/p&gt;
&lt;p&gt;主要目的是使AcuSolve與流體 - 結構相互作用。&lt;/p&gt;</t>
<t tx="leo.20170427044749.4">&lt;body&gt;
@others
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/js/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/zoom-js/zoom.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/notes/notes.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/math/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="leo.20170427044749.5">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20170427044749.6">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20170427044749.7">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427044749.8">## 2017 Spring 協同產品設計實習

## 四設計二甲 40423104 顏暄





&lt;small&gt;
Created by [40423104網誌](https://40423104.github.io/2017springcd_hw/blog/index.html)
&lt;/small&gt;



</t>
<t tx="leo.20170427044749.9">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427045700.1">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427045700.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427045700.3"># 第二週</t>
<t tx="leo.20170427045700.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427045700.5">##四連桿機構
##v-rep應用</t>
<t tx="leo.20170427045700.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427045700.7">###四連桿機構

&lt;iframe src="https://player.vimeo.com/video/206347595" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050004.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050004.2">###長度30連桿

&lt;iframe src="https://player.vimeo.com/video/206344876" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050005.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050005.2">###長度50連桿

&lt;iframe src="https://player.vimeo.com/video/206346002" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050007.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050007.2">###長度60連桿

&lt;iframe src="https://player.vimeo.com/video/206347142" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050008.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050008.2">###長度60連桿
&lt;iframe src="https://player.vimeo.com/video/207300757" width="640" height="316" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050010.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050010.2">###四連桿組合
&lt;iframe src="https://player.vimeo.com/video/207304049" width="640" height="316" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050155.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050155.2">###四連桿組合

&lt;iframe src="https://player.vimeo.com/video/207295299" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

</t>
<t tx="leo.20170427050156.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050156.2">###Onshape四連桿機構
&lt;iframe src="https://player.vimeo.com/video/207301283" width="640" height="316" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

</t>
<t tx="leo.20170427050157.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050157.2">###長度30連桿
&lt;iframe src="https://player.vimeo.com/video/207300388" width="640" height="316" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050200.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050200.2">###長度50連桿
&lt;iframe src="https://player.vimeo.com/video/207299666" width="640" height="316" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050611.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050611.2">##心得
&lt;p&gt; 1.利用第一周熟悉Solvespace 與 Onshape繪圖與模擬以及組合(包含快捷鍵複習) &lt;/p&gt;
&lt;p&gt; 2.熟悉git submodule指令 &lt;/p&gt;
&lt;p&gt; 3.了解這學期上課內容與每周進度 &lt;/p&gt;
</t>
<t tx="leo.20170427050938.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050938.2">###長度30連桿

&lt;iframe src="https://player.vimeo.com/video/207312630" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050939.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050939.2">###長度50連桿

&lt;iframe src="https://player.vimeo.com/video/207314989" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427050940.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050940.2">###長度60連桿

&lt;iframe src="https://player.vimeo.com/video/207315011" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427050941.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427050941.2">###四連桿組合

&lt;iframe src="https://player.vimeo.com/video/207315023" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427051123.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427051123.2">##v-rep應用

&lt;iframe src="https://player.vimeo.com/video/214566863" width="640" height="343" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427051124.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427051124.2">##心得
&lt;p&gt; 1.學習v-rep應用模擬四連桿 &lt;/p&gt;
&lt;p&gt; 2.熟悉v-rep操作，由於沒有很熟悉所以在模擬還是有些問題還沒找到解決方法 &lt;/p&gt;
&lt;p&gt; 3.隨著多次練習畫圖模擬，更了解上課內容 &lt;/p&gt;
</t>
<t tx="leo.20170427051748.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427051748.2">&lt;p&gt;RADIOSS, we see a lot of development in new materials and material modeling. &lt;/p&gt;
&lt;p&gt;RADIOSS，我們看到很多新材料和材料建模的發展。&lt;/p&gt;
&lt;p&gt;You probably know that we did the acquisition of MDS a couple of years back, and we have now MDS integrated with RSDIOSS, and are doing application there.&lt;/p&gt;
&lt;p&gt;您可能知道我們在幾年前就完成了MDS的收購，現在我們已經將MDS與RSDIOSS整合，並開始應用。&lt;/p&gt;</t>
<t tx="leo.20170427051802.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427051802.2">&lt;p&gt;So this is along the structural solvers side on AcuSolve side we actually added the complete portfolio of turbulence and transition models that really helps us to solve problems in wind turbines and automotive industry much more accurately, and it’s a big asset of physics simulation.&lt;/p&gt;
&lt;p&gt;因此，這是沿著AcuSolve一側的結構解算方面，我們實際添加了完整的湍流和轉換模型組合，真正幫助我們更準確地解決風力渦輪機和汽車行業的問題，這是物理仿真的一個重要的資產。&lt;/p&gt;
&lt;p&gt;And then our electromagnetic suite has actually grown last year through the acquisition of Flux, from the CEDRAT company.&lt;/p&gt;
&lt;p&gt;然後，我們的電磁套件實際上是去年通過從CEDRAT公司收購Flux而實現的。&lt;/p&gt;
</t>
<t tx="leo.20170427051902.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427051902.2">&lt;p&gt;Our two major optimization packages are OptiStruct for structural optimization, there’s a huge multidisciplinary component, too.&lt;/p&gt;
&lt;p&gt;我們的兩個主要優化包是用於結構優化的OptiStruct，還有一個巨大的多學科組件。&lt;/p&gt;
&lt;p&gt;And Hyperstudy for general optimization wrap around multidisciplinary optimization.&lt;/p&gt;
&lt;p&gt;並且Hyperstudy對一般優化包圍多學科優化。&lt;/p&gt;
&lt;p&gt;OptiStruct we spend a lot of time continuing the development for optimization and we have now Failsafe topology optimization.&lt;/p&gt;
&lt;p&gt;OptiStruct我們花了很多時間繼續開發優化，我們現在已經失效的拓撲優化。&lt;/p&gt;</t>
<t tx="leo.20170427051906.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427051906.2">&lt;p&gt;So the team right now is working on optimization for nonlinear problems and so on.&lt;/p&gt;
&lt;p&gt;所以團隊現在正在努力優化非線性問題等等。&lt;/p&gt;
&lt;p&gt;And then Hyperstudy, on the other hand, is going through a new transformation of the user the user experience was changed a few years back, but we are now trying to  make it much more easy to use by hiding a lot of the advanced functionalities to the regular users.&lt;/p&gt;
&lt;p&gt;另一方面，Hyperstudy正在經歷用戶體驗在幾年前改變的用戶體驗的一個新的轉變，但是我們現在試圖通過隱藏許多高級功能來使它更容易使用 普通用戶。&lt;/p&gt;</t>
<t tx="leo.20170427052109.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052109.2">###Fossil SCM與Stunnel 啟動
&lt;iframe src="https://player.vimeo.com/video/207569135" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052128.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052128.2">###Hyperworks1
&lt;iframe src="https://player.vimeo.com/video/207229473" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052245.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052245.2">##solvespace四連桿三角形頂點運動軌跡
###桿件加入三角形顯示路徑與過程
&lt;a href="http://imgur.com/9HN7TK8"&gt;&lt;img src="http://i.imgur.com/9HN7TK8.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427052350.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052350.2">&lt;iframe src="https://player.vimeo.com/video/208360660" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052419.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052419.2">###利用excel查看路徑是否與在solvespace操作下相同(驗證路徑)
&lt;a href="http://imgur.com/ZraAYID"&gt;&lt;img src="http://i.imgur.com/ZraAYID.png" title="source: imgur.com" /&gt;&lt;/a&gt;
</t>
<t tx="leo.20170427052421.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052421.2">&lt;iframe src="https://player.vimeo.com/video/208361060" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

</t>
<t tx="leo.20170427052538.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052538.2">##V-rep
###完成 Solvespace 30-50-60 cm 比例的四連桿組立, 並轉出 stl 檔案, 以 import 方式轉入 V-rep
&lt;iframe src="https://player.vimeo.com/video/209081797" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

</t>
<t tx="leo.20170427052545.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052545.2">###利用 Onshape 上述相同尺寸之四連桿機構, 以 stl 轉出 (或其他格式) 後, 再轉入 V-rep
&lt;iframe src="https://player.vimeo.com/video/209085492" width="640" height="343" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052633.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052633.2">##心得
&lt;p&gt; 1.學習如何使用Fossil SCM &lt;/p&gt;
&lt;p&gt; 2.目前Stunnel 啟動不能再proxy下進入網頁 &lt;/p&gt;
&lt;p&gt; 3.英文翻譯學習 及 Hyperworks認識&lt;/p&gt;
&lt;p&gt; 4.熟悉V-rep匯入練習 &lt;/p&gt;
</t>
<t tx="leo.20170427052716.1">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427052716.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.11">####長度50連桿
&lt;iframe src="https://player.vimeo.com/video/209354247" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052716.12">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.13">####直徑5的連桿
&lt;iframe src="https://player.vimeo.com/video/209355724" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052716.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.15">####導入V-rep
&lt;iframe src="https://player.vimeo.com/video/209373893" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

</t>
<t tx="leo.20170427052716.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.17">####V-rep模擬
&lt;iframe src="https://player.vimeo.com/video/210707261" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052716.18">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052716.19">##Hyperworks安裝心得
因為安裝時間上需要花比較多時間，所以沒有錄製影片，操作過後與網路上的影片的介紹，我發現HyperWorks包括建模，線性和非線性分析，結構和系統級優化，流​​體和多體動力學模擬，電磁兼容性（EMC），多物理場分析，基於模型的開發和數據管理解決等功能，對於未來的幫助很大，讓我對於這個軟體有新認識與期待。
</t>
<t tx="leo.20170427052716.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.3"># 第四週</t>
<t tx="leo.20170427052716.36">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.37">###心得
&lt;p&gt;1.學習與複習以線及座標繪製四連桿&lt;/p&gt;
&lt;p&gt;2.單連桿繪製練習與模擬&lt;/p&gt;
&lt;p&gt;3. 大約讀懂一些機械手臂動態模擬的程式與做動方式&lt;/p&gt;

</t>
<t tx="leo.20170427052716.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.5">##網際平面四連桿機構動態模擬
##單連桿繪製與導入V-rep
##Hyperworks安裝心得</t>
<t tx="leo.20170427052716.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.7">###單連桿繪製與導入V-rep
&lt;p&gt; 利用Solvespace繪製以下尺寸及組裝連桿&lt;/p&gt;
####尺寸
&lt;a href="http://imgur.com/pQ7GYmG"&gt;&lt;img src="http://i.imgur.com/pQ7GYmG.jpg" title="source: imgur.com" width="640" height="343"/&gt;&lt;/a&gt;</t>
<t tx="leo.20170427052716.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052716.9">####長度30連桿
&lt;iframe src="https://player.vimeo.com/video/209355096" width="640" height="343" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe</t>
<t tx="leo.20170427052717.1">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427052717.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052717.3"># 第五週</t>
<t tx="leo.20170427052717.36">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052717.37">###心得
&lt;p&gt;1.透過多次練習越來越熟悉v-rep的模擬操作&lt;/p&gt;
&lt;p&gt;2.清楚多連桿與單連桿機構&lt;/p&gt;
&lt;p&gt;3.了解連桿運動方式 &lt;/p&gt;
&lt;p&gt;4.熟悉解決Git Hub改版方法&lt;/p&gt;</t>
<t tx="leo.20170427052717.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052717.5">##利用V-rep 將單連桿機構導入，在進行模擬</t>
<t tx="leo.20170427052717.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052717.7">###單連桿影片
&lt;iframe src="https://player.vimeo.com/video/214560619" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214560619"&gt;虎尾科技大學 機械設計工程系-40423104-W5-單連趕v-rep模擬&lt;/a&gt; from &lt;a href="https://vimeo.com/user44900188"&gt;40423104-Yan syuan&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</t>
<t tx="leo.20170427052730.1">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427052730.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052730.11">####桿件50
&lt;iframe src="https://player.vimeo.com/video/210709757" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052730.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052730.3"># 第六週</t>
<t tx="leo.20170427052730.36">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052730.37">##心得
&lt;p&gt;1.操作八連桿模擬要一個桿件慢慢來測試模擬，才不會一直模擬失敗&lt;/p&gt;
&lt;p&gt;2.透過設計八連桿尺寸，更熟知設計時要注意到的桿件長度與需不需要加入特殊固定&lt;/p&gt;
&lt;p&gt;3.在onshape中組裝零件須注意要使用轉動配合，才能方便在V-rep中模擬 &lt;/p&gt;
</t>
<t tx="leo.20170427052730.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052730.5">##利用onshape繪製與組裝四連桿、八連桿
##轉入V-REP並模擬</t>
<t tx="leo.20170427052730.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052730.7">###四連桿影片
####桿件20
&lt;iframe src="https://player.vimeo.com/video/210709563" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052730.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052730.9">####桿件30
&lt;iframe src="https://player.vimeo.com/video/210709572" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052732.1">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427052732.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052732.3"># 第八週</t>
<t tx="leo.20170427052732.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052732.5">##轉入V-REP並模擬及轉入作法</t>
<t tx="leo.20170427052732.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052732.7">###1.導入 STL 3D圖檔
&lt;a href="http://imgur.com/byoORo7"&gt;&lt;img src="http://i.imgur.com/byoORo7.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427052734.1">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170427052734.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.11">&lt;a href="http://imgur.com/fQfeSWr"&gt;&lt;img src="http://i.imgur.com/fQfeSWr.png" title="source: imgur.com" /&gt;&lt;/a&gt;
</t>
<t tx="leo.20170427052734.12">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.13">###excel查驗
&lt;a href="http://imgur.com/OvWMa1p"&gt;&lt;img src="http://i.imgur.com/OvWMa1p.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427052734.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.15">###第二種尺寸修改
###繪製機構尺寸並模擬(L=40)
&lt;iframe src="https://player.vimeo.com/video/214902196" width="640" height="344" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052734.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.17">&lt;a href="http://imgur.com/CMi7Zyz"&gt;&lt;img src="http://i.imgur.com/CMi7Zyz.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427052734.18">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052734.19">###excel查驗
&lt;a href="http://imgur.com/jFAisIq"&gt;&lt;img src="http://i.imgur.com/jFAisIq.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427052734.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.20">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052734.21">##Fourbar Walker OnShape 零件協同繪圖與組立查驗
####利用solvespace繪製機構尺寸
&lt;a href="http://imgur.com/qeDUQdF"&gt;&lt;img src="http://i.imgur.com/qeDUQdF.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427052734.22">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052734.23">###影片
&lt;iframe src="https://player.vimeo.com/video/214880324" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052734.24">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052734.25">####利用onshape繪製零件圖與組裝模擬
###零件一主體
&lt;iframe src="https://player.vimeo.com/video/214882891" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052734.26">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052734.27">###所有桿件繪製
&lt;iframe src="https://player.vimeo.com/video/214882073" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052734.28">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052734.29">###組裝
&lt;iframe src="https://player.vimeo.com/video/214944513" width="640" height="343" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052734.3"># 期中任務</t>
<t tx="leo.20170427052734.30">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427052734.31">###模擬
&lt;iframe src="https://player.vimeo.com/video/214729992" width="640" height="343" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427052734.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.5">##Fossil Server 實習查驗
##四連桿機構協同 Trace Point 查驗
##Fourbar Walker OnShape 零件協同繪圖與組立查驗</t>
<t tx="leo.20170427052734.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.7">###Fossil SCM與Stunnel 啟動
&lt;iframe src="https://player.vimeo.com/video/207569135" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427052734.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427052734.9">##四連桿機構協同 Trace Point 查驗
####利用solvespace繪製機構尺寸並模擬路徑在導入excel查驗
###第一種尺寸修改
###繪製機構尺寸並模擬(L=40)
&lt;iframe src="https://player.vimeo.com/video/214898008" width="640" height="344" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170427054313.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427054313.2">####桿件60
&lt;iframe src="https://player.vimeo.com/video/210709915" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427054315.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427054315.2">####桿件組合
&lt;iframe src="https://player.vimeo.com/video/211774477" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427054316.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427054316.2">####轉入V-rep模擬
&lt;iframe src="https://player.vimeo.com/video/214558908" width="640" height="343" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427054318.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427054318.2">###八連桿影片
####桿件繪製(一)
中心距分別為:15mm、50mm、64mm
L型桿件:6mmx40mm

&lt;iframe src="https://player.vimeo.com/video/214740141" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427054523.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427054523.2">####桿件繪製(二)
中心距分別為:40mm、50mm
三角形尺寸:40mm、40mm、56mm
角度100度L型桿件:18mm、25mm、R45mm

&lt;iframe src="https://player.vimeo.com/video/214741635" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427054556.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427054556.2">####桿件組合
&lt;iframe src="https://player.vimeo.com/video/214777688" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427054557.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427054557.2">####轉入V-rep模擬
&lt;iframe src="https://player.vimeo.com/video/214958790" width="640" height="346" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170427055427.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055427.2">###2.可先調整圖的位置
&lt;a href="http://imgur.com/VW5pBOR"&gt;&lt;img src="http://i.imgur.com/VW5pBOR.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055428.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055428.2">###3.分解組合圖(每件變成單一個體)
&lt;a href="http://imgur.com/12OHaFy"&gt;&lt;img src="http://i.imgur.com/12OHaFy.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055429.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055429.2">&lt;a href="http://imgur.com/Edd28T2"&gt;&lt;img src="http://i.imgur.com/Edd28T2.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055431.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055431.2">###4.導入圓柱
&lt;a href="http://imgur.com/KJMFJQ7"&gt;&lt;img src="http://i.imgur.com/KJMFJQ7.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055432.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055432.2">&lt;a href="http://imgur.com/cXaH1ZH"&gt;&lt;img src="http://i.imgur.com/cXaH1ZH.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055434.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055434.2">###5.將圓柱與軸對齊中心
&lt;a href="http://imgur.com/WGANwBU"&gt;&lt;img src="http://i.imgur.com/WGANwBU.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055632.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055632.2">&lt;a href="http://imgur.com/VmMz0Vo"&gt;&lt;img src="http://i.imgur.com/VmMz0Vo.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055634.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055634.2">###6.調整軸轉動的速度
&lt;a href="http://imgur.com/HGMpJmb"&gt;&lt;img src="http://i.imgur.com/HGMpJmb.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055654.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055654.2">&lt;a href="http://imgur.com/LbXtSgu"&gt;&lt;img src="http://i.imgur.com/LbXtSgu.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055655.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055655.2">###7.調整桿件設定
&lt;a href="http://imgur.com/VmMz0Vo"&gt;&lt;img src="http://i.imgur.com/VmMz0Vo.png" title="source: imgur.com" /&gt;&lt;/a&gt;</t>
<t tx="leo.20170427055819.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170427055819.2">###8.模擬
&lt;a href="http://imgur.com/SAORFYj"&gt;&lt;img src="http://i.imgur.com/SAORFYj.png" title="source: imgur.com" /&gt;&lt;/a&gt;
</t>
<t tx="leo.20170427061628.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427061628.2">&lt;p&gt;We added more physics simulation to the software, and we improved our parallel performance on high performance computers. &lt;/p&gt;
&lt;p&gt;我們增加了許多的物理的模擬，我們提高了高性能電腦的平行性能。&lt;/p&gt;
&lt;p&gt;OptiStruct, which is our implicit code, adds a lot of development in the nonlinear implicit area, but also in the optimization technology.&lt;/p&gt;
&lt;p&gt;OptiStruct是我們的隱式代碼，在非線性隱含區域中，也在優化技術中添加了很多開發。&lt;/p&gt;
</t>
<t tx="leo.20170427061708.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427061708.2">&lt;p&gt;MotionSolve is based on a very unique formulation that this different from other multibody dynamics code, and the  formulation lends itself very well to optimization implementation.&lt;/p&gt;
&lt;p&gt;MoMotionSolvetionSolve是根據一個非常獨特的公式，這不同於其他多體動力學代碼，MotionSolve公式本身非常好地優化實施。 &lt;/p&gt;
&lt;p&gt;So the team has worked really hard on contact formulations, got very robust.&lt;/p&gt;
&lt;p&gt;因此團隊對於接觸公式非常努力，獲得了非常強大的。&lt;/p&gt;
&lt;p&gt;It's very cool which kind of problems can solve with contact modelling.&lt;/p&gt;
&lt;p&gt;這類型的問題可以解決與接觸建模這是非常酷的。&lt;/p&gt;
</t>
<t tx="leo.20170427061733.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427061733.2">&lt;p&gt;As well as the acquisition of WinProp, from AWE.&lt;/p&gt;
&lt;p&gt;以及從AWE收購WinProp。&lt;/p&gt;
&lt;p&gt;So now we have a complete frequency spectrum from low frequency electromagnetics the high frequency electromagnetics which is powered by FEKO.&lt;/p&gt;
&lt;p&gt;所以現在我們有一個完整的頻譜從低頻電磁學的高頻電磁學由FEKO供電。&lt;/p&gt;
&lt;p&gt;We now have a complete portfolio of physics modeling available for our customers, and it’s all linked through optimization. &lt;/p&gt;
&lt;p&gt;我們現在有一個完整的物理建模組合可用於我們的客戶，它都通過優化鏈接。&lt;/p&gt;
</t>
<t tx="leo.20170427061809.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427061809.2">&lt;p&gt;But also one development that happened during the last year came out piece-wise in different point releases and is now really mature.&lt;/p&gt;
&lt;p&gt;但是，在過去一年中發生的一個發展，在不同的積分發布中分段出現，現在已經成熟。&lt;/p&gt;
&lt;p&gt;And 2017 is our contact analysis, so we have different ways of defining sliding contact and things like that.&lt;/p&gt;
&lt;p&gt;2017年是我們的接觸分析，所以我們有不同的方式來定義滑動接觸和類似的東西。&lt;/p&gt;
&lt;p&gt;The fast contact analysis for small deformation is blazing fast.&lt;/p&gt;
&lt;p&gt;對小變形的快速接觸分析是快速的。&lt;/p&gt;
&lt;p&gt;It’s a very simple idea that makes the solution very fast, and that adds OptiStruct as really a leading nonlinear structural solver. &lt;/p&gt;
&lt;p&gt;這是一個非常簡單的想法，使解決方案非常快，並將OptiStruct添加為真正的領先的非線性結構求解器。&lt;/p&gt;</t>
<t tx="leo.20170427061832.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427061832.2">&lt;p&gt;We kept on working on the manufacturing solution to do lattice optimization.&lt;/p&gt;
&lt;p&gt;我們一直在製造解決方案上做晶格優化。&lt;/p&gt;
&lt;p&gt;For the multi-model optimization it’s really maturing and we find more and more applications where that helps. &lt;/p&gt;
&lt;p&gt;對於多模型優化，它真的成熟，我們發現越來越多的應用程序，這有助於。&lt;/p&gt;
&lt;p&gt;Our goal is actually to include all the physics in the optimizations.&lt;/p&gt;
&lt;p&gt;我們的目標實際上是在優化中包括所有的物理。&lt;/p&gt;</t>
<t tx="leo.20170427061918.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170427061918.2">&lt;p&gt;And depending on the level of expertise or depending on the job that the user has to do, they can customize the user experience.&lt;/p&gt;
&lt;p&gt;並且取決於專業水平或者根據用戶必須做的工作，他們可以定制用戶體驗。&lt;/p&gt;
&lt;p&gt;We adds a few new connections.&lt;/p&gt;
&lt;p&gt;我們添加了一些新的連接。&lt;/p&gt;
&lt;p&gt;One of them is a Flux connection.&lt;/p&gt;
&lt;p&gt;其中一個是Flux連接。&lt;/p&gt;
&lt;p&gt;Flux is an electromagnetics code that we just acquired for low frequency electromagnetics, so we can all take a Flux database and put it into Hyperstudy into the study with that.&lt;/p&gt;
&lt;p&gt;Flux是我們剛剛為低頻電磁學採集的電磁學代碼，所以我們可以採用一個Flux數據庫，並把它放入Hyperstudy進行研究。&lt;/p&gt;</t>
<t tx="leo.20170608093444.1">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20170608093444.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170608093444.3"># 期末自我評分</t>
<t tx="leo.20170608093444.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170608093444.5">##自我評分與評分依據</t>
<t tx="leo.20170608093444.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170608093444.7">###</t>
<t tx="leo.20170608093444.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170608093444.9">##</t>
<t tx="yen.20170108171605.1"></t>
<t tx="yen.20170108171605.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20170108171605.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20170108171622.1">2017 Spring CD 機械設計工程系協同產品設計實習

倉儲位置: https://github.com/mdecourse/2017springcd

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="yen.20170108171733.1"></t>
<t tx="yen.20170108171733.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="yen.20170108171733.5"></t>
<t tx="yen.20170108171733.71"></t>
<t tx="yen.20170108171733.81"></t>
<t tx="yen.20170108171733.83">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="yen.20170108171930.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 7443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("7443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170108171939.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170120212350.1"></t>
<t tx="yen.20170120212354.1">@language python
import calendar

#calendar.setfirstweekday(calendar.SUNDAY)
# 設每週第1天為星期日
cal = calendar.TextCalendar(calendar.SUNDAY)
# 直接印出文字月曆
#cal.prmonth(2017, 7)

try:
    g.es(cal.formatyear(2017, 2, 1, 1, 3))
except:
    print(cal.formatyear(2017, 2, 1, 1, 3))</t>
<t tx="yen.20170120212520.1">import calendar
import pprint

cal = calendar.Calendar(calendar.SUNDAY)

cal_data = cal.yeardays2calendar(2017, 3)
print('len(cal_data)      :', len(cal_data))

top_months = cal_data[0]
print('len(top_months)    :', len(top_months))

first_month = top_months[0]
print('len(first_month)   :', len(first_month))

print('first_month:')
pprint.pprint(first_month, width=65)</t>
<t tx="yen.20170120232548.1">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt; 
&lt;head&gt;
&lt;title&gt;Brython - 15-puzzle demo&lt;/title&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;script type="text/javascript"
    src="/src/brython_dist.js"&gt;
&lt;/script&gt;


&lt;style type="text/css" media="screen"&gt;
  body { 
    font: 12px/15px Calibri, Verdana;
    margin: 0px;
    background:#ddd;
    padding: 0px;
  }
#container{
    position: absolute;
    border-width:1px;
    border-radius: 10px;
    border-style: solid;
    border-color: #000;
    background-color: #333;
}
#zone {
    position: absolute;
    background-color:#666;
    color: #fff;
    font-size: 16px;
    line-height:20px;
    padding: 0px;
}
.square{
    position: absolute;
    color: #000; 
    background: #fcfff4; /* old browsers */
    background: linear-gradient(to bottom, #fcfff4 0%,#dfe5d7 40%,#b3bead 100%);
    /* background-color: orange; */
    border-width: 1px;
    border-style: solid;
    border-radius: 5px;
    border-color: #200;
    text-align: center;
}
&lt;/style&gt;

&lt;meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;"/&gt;
&lt;/head&gt;   
&lt;body onload="brython(1)"&gt;

&lt;script type="text/python"&gt;
from browser import window, document, alert, html
import datetime
import calendar
import locale

w_height = window.innerHeight
w_width = window.innerWidth

locale.setlocale(locale.LC_ALL, '')

today = datetime.date.today()
year, month = today.year, today.month

zone = document["zone"]
c_width = w_width//7
c_height = w_height//6

cal = calendar.Calendar()

month_head = html.DIV('%s %s' %(calendar.month_name[month], year),
    style=dict(left=0, width=7*c_width),
    Class="square"
    )
zone &lt;= month_head

for dnum, day in enumerate(calendar.day_name):
    cell = html.DIV(day, 
        style=dict(left=dnum*c_width, top=20,
                   width=c_width, height=20),
        Class="square")
    zone &lt;= cell

for wnum, week in enumerate(cal.monthdatescalendar(year, month)):
    for dnum, day in enumerate(week):
        cell = html.DIV(day.day, 
            style=dict(left=dnum*c_width, top=40+wnum*c_height,
                       width=c_width, height=c_height,
                       lineHeight='%spx' %c_height),
            Class="square")
        if day.month == month:
            cell.style.color = "#000"
        else:
            cell.style.color = "#999"
        if day == today:
            cell.style.background = "linear-gradient(to bottom, #dcfff4 0%,#bfe5d7 40%,#93bead 100%)"
        zone &lt;= cell
&lt;/script&gt;

&lt;div id="container"&gt;
    &lt;div id="zone"&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</t>
<t tx="yen.20170123204227.1">&lt;style  type="text/css"&gt;
table{
    border: 1px solid black;
    table-layout: fixed;
    width: 100%;
    text-align: center;
}

th, td {
    width: 14%;
    text-align: center;
}
&lt;/style&gt;
&lt;div id="cal1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document, html
import calendar
import locale

z = html.DIV()
z.style = {"padding": "5px", 
               "backgroundColor": "#ADD8E6",
               "width": "50%"}
cal = calendar.HTMLCalendar(calendar.SUNDAY)
for i in range(1, 5):
    z.html += cal.formatmonth(2017, i)
document["cal1"] &lt;= z
&lt;/script&gt;

&lt;div id="cal2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document, html
import calendar
import locale

cal2 = document["cal2"]
'''
# default calendar MONDAY is the first day of the week
count = 0
output = "2017 2bCD (三) 08:10-12:00 各週上課日期: "
for month in range(2, 7):
    monthArray = calendar.monthcalendar(2017, month)
    for week in range(len(monthArray)):
        weekArray = monthArray[week]
        # 只需要列出星期三
        if weekArray[2] != 0:
            if month == 2:
                if weekArray[2] &gt; 20:
                    count += 1
                    if count &lt;= 18:
                        output += "W"+str(count)+"-"+ str(month)+ "/" + str(weekArray[2]) + ","
            else:
                count += 1
                if count &lt;= 18:
                    output += "W"+str(count)+"-"+ str(month)+ "/" + str(weekArray[2]) + ","
cal2 &lt;= output
'''

def getClassdate(year=2017, startM=2, startD=20, w=0, note=""):
    # w=0 表示課程排在星期一
    # startM 表示開學月份, startD 表示開學日
    # note 為課程初始告示
    # default calendar MONDAY is the first day of the week
    # 每學期共有 18 週
    totalW = 18
    count = 0
    # output = "2017 Spring 2bCD (三) 08:10-12:00 各週上課日期: "
    output = note + html.BR()
    # 若必須全年搜尋則 7 改為 12, 但是因為只有 18 週, 因此邏輯要修改讓程式較快結束
    for month in range(startM, 7):
        monthArray = calendar.monthcalendar(2017, month)
        for week in range(len(monthArray)):
            weekArray = monthArray[week]
            # 只需要列出星期 (w+1)
            if weekArray[w] != 0:
                if month == startM:
                    if weekArray[startM] &gt; startD:
                        count += 1
                        if count &lt;= totalW:
                            output += "w"+str(count)+"-"+ str(month)+ "/" + str(weekArray[w]) + ", "
                else:
                    count += 1
                    if count &lt;=  totalW:
                        output += "w"+str(count)+"-"+ str(month)+ "/" + str(weekArray[w]) + ", "
    cal2 &lt;= output

# 2b 協同產品設計實習 (三 w=2)
getClassdate(year=2017, startM=2, startD=20, w=2, note="2017 Spring 2bCD (三) 08:10-12:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# 2a 協同產品設計實習 (四 w=3)
getClassdate(year=2017, startM=2, startD=20, w=3, note="2017 Spring 2aCD (四) 08:10-12:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# 1a 網際內容管理 (五 w=4)
getClassdate(year=2017, startM=2, startD=20, w=4, note="2017 Spring 1aWCM (五) 13:20-16:10 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# VE1a 網際內容管理 (五 w=4)
getClassdate(year=2017, startM=2, startD=20, w=4, note="2017 Spring VE1aCP (五) 18:30-20:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
&lt;/script&gt;</t>
<t tx="yen.20170124102405.1">from flask import Flask 
from flask_socketio import SocketIO, send

app = Flask(__name__)
app.config['SECRET_KEY'] = 'mysecret'
socketio = SocketIO(app)

@socketio.on('message')
def handleMessage(msg):
	print('Message: ' + msg)
	send(msg, broadcast=True)

if __name__ == '__main__':
	socketio.run(app)</t>
<t tx="yen.20170124102433.1">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Chat Room&lt;/title&gt;
&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.8/socket.io.min.js"&gt;&lt;/script&gt;
&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;script type="text/javascript"&gt;
$(document).ready(function() {

	var socket = io.connect('http://127.0.0.1:5000');

	socket.on('connect', function() {
		socket.send('User has connected!');
	});

	socket.on('message', function(msg) {
		$("#messages").append('&lt;li&gt;'+msg+'&lt;/li&gt;');
		console.log('Received message');
	});

	$('#sendbutton').on('click', function() {
		socket.send($('#myMessage').val());
		$('#myMessage').val('');
	});

});
&lt;/script&gt;
&lt;ul id="messages"&gt;&lt;/ul&gt;
&lt;input type="text" id="myMessage"&gt;
&lt;button id="sendbutton"&gt;Send&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;</t>
<t tx="yen.20170207092354.1">##利用 IPv6 網路傳輸設計檔案

&lt;pre class="brush: python"&gt;
import socket
from http.server import HTTPServer, SimpleHTTPRequestHandler

class MyHandler(SimpleHTTPRequestHandler):
  def do_GET(self):
    if self.path == '/ip':
      self.send_response(200)
      self.send_header('Content-type', 'text/html')
      self.end_headers()
      self.wfile.write('Your IP address is %s' % self.client_address[0])
      return
    else:
      return SimpleHTTPRequestHandler.do_GET(self)

class HTTPServerV6(HTTPServer):
  address_family = socket.AF_INET6

def main():
  server = HTTPServerV6(('::', 8080), MyHandler)
  server.serve_forever()

if __name__ == '__main__':
  main()
&lt;/pre&gt;


##電腦的多重處理

&lt;a href="http://www.davekuhlman.org/python_multiprocessing_01.html"&gt;http://www.davekuhlman.org/python_multiprocessing_01.html&lt;/a&gt;

xmlrpc server:

&lt;pre class="brush: python"&gt;
from xmlrpc.server import SimpleXMLRPCServer
from xmlrpc.server import SimpleXMLRPCRequestHandler

# Restrict to a particular path.
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

# Create server
with SimpleXMLRPCServer(("localhost", 8000),
                        requestHandler=RequestHandler) as server:
    server.register_introspection_functions()

    # Register pow() function; this will use the value of
    # pow.__name__ as the name, which is just 'pow'.
    server.register_function(pow)

    # Register a function under a different name
    def adder_function(x,y):
        return x + y
    server.register_function(adder_function, 'add')

    # Register an instance; all the methods of the instance are
    # published as XML-RPC methods (in this case, just 'mul').
    class MyFuncs:
        def mul(self, x, y):
            return x * y

    server.register_instance(MyFuncs())

    # Run the server's main loop
    server.serve_forever()
&lt;/pre&gt;

xmlrpc client:

&lt;pre class="brush: python"&gt;
import xmlrpc.client

s = xmlrpc.client.ServerProxy('http://localhost:8000')
print(s.pow(2,3))  # Returns 2**3 = 8
print(s.add(2,3))  # Returns 5
print(s.mul(5,2))  # Returns 5*2 = 10

# Print list of available methods
print(s.system.listMethods())
&lt;/pre&gt;

Another xmlrpc server:

&lt;pre class="brush: python"&gt;
import datetime

class ExampleService:
    def getData(self):
        return '42'

    class currentTime:
        @staticmethod
        def getCurrentTime():
            return datetime.datetime.now()

with SimpleXMLRPCServer(("localhost", 8000)) as server:
    server.register_function(pow)
    server.register_function(lambda x,y: x+y, 'add')
    server.register_instance(ExampleService(), allow_dotted_names=True)
    server.register_multicall_functions()
    print('Serving XML-RPC on localhost port 8000')
    try:
        server.serve_forever()
    except KeyboardInterrupt:
        print("\nKeyboard interrupt received, exiting.")
        sys.exit(0)
&lt;/pre&gt;

Another xmlrpc client:

&lt;pre class="brush: python"&gt;
import xmlrpc.client

server = xmlrpc.client.ServerProxy("http://localhost:8000")

try:
    print(server.currentTime.getCurrentTime())
except Error as v:
    print("ERROR", v)

multi = MultiCall(server)
multi.getData()
multi.pow(2,9)
multi.add(1,2)
try:
    for response in multi():
        print(response)
except Error as v:
    print("ERROR", v)
&lt;/pre&gt;

ssl xmlrpc:

&lt;pre class="brush: python"&gt;
"""Monkey patching standard xmlrpc.server.SimpleXMLRPCServer
to run over TLS (SSL)

Changes inspired on http://www.cs.technion.ac.il/~danken/SecureXMLRPCServer.py
"""
import socket
import socketserver
import ssl
from xmlrpc.server import SimpleXMLRPCServer, SimpleXMLRPCDispatcher, SimpleXMLRPCRequestHandler
try:
    import fcntl
except ImportError:
    fcntl = None


class SimpleXMLRPCServerTLS(SimpleXMLRPCServer):
    def __init__(self, addr, requestHandler=SimpleXMLRPCRequestHandler,
                 logRequests=True, allow_none=False, encoding=None, bind_and_activate=True):
        """Overriding __init__ method of the SimpleXMLRPCServer

        The method is an exact copy, except the TCPServer __init__
        call, which is rewritten using TLS
        """
        self.logRequests = logRequests

        SimpleXMLRPCDispatcher.__init__(self, allow_none, encoding)

        """This is the modified part. Original code was:

            socketserver.TCPServer.__init__(self, addr, requestHandler, bind_and_activate)

        which executed:

            def __init__(self, server_address, RequestHandlerClass, bind_and_activate=True):
                BaseServer.__init__(self, server_address, RequestHandlerClass)
                self.socket = socket.socket(self.address_family,
                                            self.socket_type)
                if bind_and_activate:
                    self.server_bind()
                    self.server_activate()

        """
        socketserver.BaseServer.__init__(self, addr, requestHandler)
        self.socket = ssl.wrap_socket(
            socket.socket(self.address_family, self.socket_type),
            server_side=True,
            certfile='cert.pem',
            cert_reqs=ssl.CERT_NONE,
            ssl_version=ssl.PROTOCOL_SSLv23,
            )
        if bind_and_activate:
            self.server_bind()
            self.server_activate()

        """End of modified part"""

        # [Bug #1222790] If possible, set close-on-exec flag; if a
        # method spawns a subprocess, the subprocess shouldn't have
        # the listening socket open.
        if fcntl is not None and hasattr(fcntl, 'FD_CLOEXEC'):
            flags = fcntl.fcntl(self.fileno(), fcntl.F_GETFD)
            flags |= fcntl.FD_CLOEXEC
            fcntl.fcntl(self.fileno(), fcntl.F_SETFD, flags)
&lt;/pre&gt;

 Server端
 
 
&lt;pre class="brush: python"&gt;
#Python 2
#import SimpleXMLRPCServer
#Python 3
import xmlrpc.server

host = "127.0.0.1"
port = 1234

def handle(msg):
    #Python 2
    #print "Handle message: " + msg
    #Python 3
    print("Handle message: " + msg)

    ret = "Hello! I have received your message."
    return ret

def main():
    #Python 2
    #server = SimpleXMLRPCServer.SimpleXMLRPCServer((host, port))
    #Python 3
    server = xmlrpc.server.SimpleXMLRPCServer((host, port))

    server.register_function(handle)
    server.serve_forever()

if __name__ == "__main__":
    main()
&lt;/pre&gt;

Client端:

&lt;pre class="brush: python"&gt;
#Python 2
#import xmlrpclib
#Python 3
import xmlrpc.client

host = "http://127.0.0.1:1234"

def main():
    #Python 2
    #server = xmlrpclib.ServerProxy(hots)
    #Python 3
    server = xmlrpc.client.ServerProxy(host)

    result = server.handle("Welcome.")

    #Python 2
    #print result
    #Python 3
    print(result)

if __name__ == "__main__":
    main()
&lt;/pre&gt;


有一些地方要注意：

    Python 2 和Python 3 的 xmlrpc library不同，範例裡有用註解表示Python 2的寫法。
    
    Python 2 和Python 3 的print也不同。
    
    SimpleXMLRPCServer() 的參數是 tuple 型態，host 要給字串，port 要給整數。
    
    server的host設定為127.0.0.1，client就只能連線到127.0.0.1；換句話說，server的host若設定成192.168.1.1，client即使在本機，也不能透過127.0.0.1連線，只能連線到192.168.1.1。
    
    client端呼叫一次server端的handle()，socket連線即結束；要再次呼叫的話，要再執行一次ServerProxy()。
    
    server端可以一次註冊多個function。
    
    serve_forever()要放在最後面呼叫，因為呼叫完即進入server的main routine。
    
&lt;a href="https://github.com/etopian/python3-xmlrpc-ssl-basic-auth"&gt;https://github.com/etopian/python3-xmlrpc-ssl-basic-auth&lt;/a&gt;

&lt;pre class="brush: python"&gt;
'''
Created on Jun 20, 2011

XMLRPC server to run over HTTPS

@author: mraposa
'''
import socket
import socketserver
import ssl
import pickle
import xmlrpc.client
from xmlrpc.server import SimpleXMLRPCServer, SimpleXMLRPCDispatcher, SimpleXMLRPCRequestHandler
try:
    import fcntl
except ImportError:
    fcntl = None

#    Easiest way to create the key file pair was to use OpenSSL -- http://openssl.org/ Windows binaries are available
#    You can create a self-signed certificate easily "openssl req -new -x509 -days 365 -nodes -out cert.pem -keyout privatekey.pem"
#    for more information --  http://docs.python.org/library/ssl.html#ssl-certificates
KEYFILE='c:\\delete\\privatekey.pem'    # Replace with your PEM formatted key file
CERTFILE='c:\\delete\\cert.pem'  # Replace with your PEM formatted certificate file

userPassDict = {"mraposa":"test123",
                "jsmith":"hellow"}
   
class SimpleXMLRPCServerTLS(SimpleXMLRPCServer):
    def __init__(self, addr, requestHandler=SimpleXMLRPCRequestHandler,
                 logRequests=True, allow_none=False, encoding=None, bind_and_activate=True):
        """Overriding __init__ method of the SimpleXMLRPCServer

        The method is an exact copy, except the TCPServer __init__
        call, which is rewritten using TLS
        """
        self.logRequests = logRequests

        SimpleXMLRPCDispatcher.__init__(self, allow_none, encoding)

        """This is the modified part. Original code was:

            socketserver.TCPServer.__init__(self, addr, requestHandler, bind_and_activate)

        which executed:

            def __init__(self, server_address, RequestHandlerClass, bind_and_activate=True):
                BaseServer.__init__(self, server_address, RequestHandlerClass)
                self.socket = socket.socket(self.address_family,
                                            self.socket_type)
                if bind_and_activate:
                    self.server_bind()
                    self.server_activate()

        """
        class VerifyingRequestHandler(SimpleXMLRPCRequestHandler):
            '''
            Request Handler that verifies username and password passed to
            XML RPC server in HTTP URL sent by client.
            '''
            # this is the method we must override
            def parse_request(self):
                # first, call the original implementation which returns
                # True if all OK so far
                if SimpleXMLRPCRequestHandler.parse_request(self):
                    # next we authenticate
                    if self.authenticate(self.headers):
                        return True
                    else:
                        # if authentication fails, tell the client
                        self.send_error(401, 'Authentication failed')
                return False
           
            def authenticate(self, headers):
                from base64 import b64decode
                #    Confirm that Authorization header is set to Basic
                (basic, _, encoded) = headers.get('Authorization').partition(' ')
                assert basic == 'Basic', 'Only basic authentication supported'
               
                #    Encoded portion of the header is a string
                #    Need to convert to bytestring
                encodedByteString = encoded.encode()
                #    Decode Base64 byte String to a decoded Byte String
                decodedBytes = b64decode(encodedByteString)
                #    Convert from byte string to a regular String
                decodedString = decodedBytes.decode()
                #    Get the username and password from the string
                (username, _, password) = decodedString.partition(':')
                #    Check that username and password match internal global dictionary
                if username in userPassDict:
                    if userPassDict[username] == password:
                        return True
                return False
       
        #    Override the normal socket methods with an SSL socket
        socketserver.BaseServer.__init__(self, addr, VerifyingRequestHandler)
        self.socket = ssl.wrap_socket(
            socket.socket(self.address_family, self.socket_type),
            server_side=True,
            keyfile=KEYFILE,
            certfile=CERTFILE,
            cert_reqs=ssl.CERT_NONE,
            ssl_version=ssl.PROTOCOL_SSLv23,
            )
        if bind_and_activate:
            self.server_bind()
            self.server_activate()

        """End of modified part"""

        # [Bug #1222790] If possible, set close-on-exec flag; if a
        # method spawns a subprocess, the subprocess shouldn't have
        # the listening socket open.
        if fcntl is not None and hasattr(fcntl, 'FD_CLOEXEC'):
            flags = fcntl.fcntl(self.fileno(), fcntl.F_GETFD)
            flags |= fcntl.FD_CLOEXEC
            fcntl.fcntl(self.fileno(), fcntl.F_SETFD, flags)

# Restrict to a particular path.
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

def executeRpcServer():
    # Create server
    server = SimpleXMLRPCServerTLS(("localhost", 443), requestHandler=RequestHandler)
    server.register_introspection_functions()

    # Register pow() function; this will use the value of
    # pow.__name__ as the name, which is just 'pow'.
    server.register_function(pow)

    # Register a function under a different name
    def adder_function(x,y):
        return x + y
    server.register_function(adder_function, 'add')

    # Register an instance; all the methods of the instance are
    # published as XML-RPC methods (in this case, just 'div').
    class MyFuncs:
        def div(self, x, y):
            return x // y
       
        def enterUID(self, uid):
            print (uid)
            return "Got uid " + uid
       
        #    For this test pickle function I am assuming the pickled object is just a list
        def uploadPickle(self, pickleStringBinary):
            #    Get the binary data from the pickled string
            pickleData = pickleStringBinary.data
            #    Unpickle the data into an object
            pickObject = pickle.loads(pickleData)
            #    Print the object to test
            print (pickObject[-1])
            #    Modify the object to test
            pickObject.append("Server got pickled object")
            #    Pickle the object. Protocol=2 is required to support Python v2 clients
            newPickleString = pickle.dumps(pickObject, protocol=2)
            #    Label the string binary and send it back to the XML client
            return xmlrpc.client.Binary(newPickleString)

    server.register_instance(MyFuncs())

    # Run the server's main loop
    print("Starting XML RPC Server")
    server.serve_forever()


if __name__ == '__main__':  
    executeRpcServer()

 

The client code would look something like this:

def xmlRpcClient(pickableObject):
    '''
    Connects to RPC server for HTTPs. This is simply a demo function to showcase
    what can be done.
    @param pickleString:
    '''

    import pickle
    import xmlrpclib

    #    Connects to server
    #    Can only connect over HTTPS with HTTPS server
    #    Server supports passing username and password
    s = xmlrpclib.ServerProxy('https://mraposa:test123@localhost:443')
    #     Runs various functions on the remote server
    print s.pow(2,3)  # Returns 2**3 = 8
    print s.add(2,3)  # Returns 5
    print s.div(5,2)  # Returns 5//2 = 2
   
    #    Uploads a pickable object to XML RPC server.
    #    First pickles the object into a string -- Uses protocol=2 to enforce Python 2 vs 3 compatibility
    #    Then send the string as a binary over XMLRPC. Sending a string results in conversion errors from
    #    Python 2 to 3
    #    Server returns a binary pickled object back
    pickleString = pickle.dumps(pickableObject, protocol=2)
    newPickleStringBinary = s.uploadPickle(xmlrpclib.Binary(pickleString))
   
    #    gets Binary data from returned results
    newPickleString = newPickleStringBinary.data
    #    Load the new pickle data into a new object
    newPickleObject = pickle.loads(newPickleString)
    print ("Client got object: " + newPickleObject[-1])

    # Print list of available methods
    print s.system.listMethods()
&lt;/pre&gt;

Python dokuwiki:

&lt;a href="https://github.com/fmenabe/python-dokuwiki"&gt;https://github.com/fmenabe/python-dokuwiki&lt;/a&gt;

Qpython:

&lt;a href="http://qpython.com/"&gt;http://qpython.com/&lt;/a&gt;

Kivy:

&lt;a href="https://kivy.org/#home"&gt;https://kivy.org/#home&lt;/a&gt;

##Asynchronous JavaScript and XML

Ajax for Brython:

&lt;a href="http://stackoverflow.com/questions/26021672/how-to-use-ajax-in-brython"&gt;http://stackoverflow.com/questions/26021672/how-to-use-ajax-in-brython&lt;/a&gt;

##Chat 工具

建立一個 chat 工具:

&lt;a href=""https://github.com/PrettyPrinted/flask-socketio-chat&gt;https://github.com/PrettyPrinted/flask-socketio-chat&lt;/a&gt;

&lt;a href="https://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent"&gt;https://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent&lt;/a&gt;

&lt;a href="https://github.com/callmephilip/chatzilla"&gt;https://github.com/callmephilip/chatzilla&lt;/a&gt;

##雲端空間

&lt;a href="https://www.heroku.com/pricing"&gt;https://www.heroku.com/pricing&lt;/a&gt;

#計算機程式課程回顧

##電腦基本知識

###電腦基本軟硬體設定

操作系統

網路設定

###近端與與遠端檔案管理

可攜程式環境

robodk based programming 

glowscript based simulation

brython based simulation

git 與 github

計算機程式課程的目的, 在利用 Leo Editor 與 Brython 導入 Python3 單機與網際程式環境, 讓學員能夠利用 Python3 程式語法管理機械設計資料, 並且利用網際程式進行基本的機械設計工程分析.

##管理機械設計資料

##機械設計工程分析

#電腦輔助設計實習課程回顧

電腦輔助設計實習課程的目的, 在銜接計算機程式課程, 利用 3D 參數繪圖與設計軟體, 進一步導入較為具像的產品設計內容, 其中包括產品零件的設計與繪圖, 產品機構的運動分析, 產品功能的展示等.

四連桿 - Solvespace - V-rep - arduino stepper motor control

八連桿 - Solvespace - V-rep - arduino stepper motor control

#協同產品設計實習

2D 齒輪組傳動囓合設計繪圖

3D 齒輪組傳動囓合設計繪圖

Onshape featurescript

電腦輔助設計實習課程的目的, 在銜接計算機程式與電腦輔助設計實習課程, 主要利用 Onshape 與 Github 讓學員進行分組同步與非同步產品開發實習.

##Onshape 同步協同

同步協同原理

同步協同優缺點

##Github 非同步協同

非同步協同原理

非同步協同優缺點

##協同設計題目: 機械計時器(?)

機械計時器 (mechanical clock) 協同設計 (Jupyterlab, solvespace 與 onshape)、模擬 (V-rep)與製作 (delta printer)

以機械傳動顯示計時器之秒、分與時數, 協同設計佔 30%, 模擬佔 30%, 製作佔 40%.

協同設計 - 協同性、創新性、實用性, 所有資料都必須以 Leo Editor, Pelican 網誌與 Reveal 簡報展示.

系統模擬 - 必須以 Solvespace + Onshape 設計零組件, 並在 V-rep 中模擬, 並且以 Jupyterlab 執行運算分析.

### 利用伺服器執行 Python3 程式

Jupyterhub: &lt;a href="https://8888.kmol.info:9443"&gt;https://8888.kmol.info:9443&lt;/a&gt;</t>
<t tx="yen.20170209024032.1">https://studywolf.wordpress.com/

https://github.com/studywolf/blog/tree/master/VREP

https://www.youtube.com/channel/UCiK0J5wtnyX2jP-AiGbdhjg

V-rep

http://www.cnblogs.com/21207-iHome/tag/V-rep/</t>
<t tx="yen.20170210153828.1">根據 http://www.coppeliarobotics.com/helpFiles/en/remoteApiServerSide.htm 中的說明.

V-rep 啟動時, 會根據系統目錄下的 remoteApiConnections.txt 檔案中的設定, 啟動  rempte api 功能:

// This file defines all the continuous remote API server services (started at remote API plugin initialization, i.e. V-REP start-up)
//
// Each remote API server service requires following 3 entries:
//
// portIndex@_port = xxxx               // where xxxx is the desired port number (below 19997 are preferred for server services starting at V-REP start-up)
// portIndex@_debug = xxxx              // where xxxx is true or false
// portIndex@_syncSimTrigger = xxxx     // where xxxx is true or false. When true, then the service will be pre-enabled for synchronous operation.
//
// In above strings, @ can be any number starting with 1. If more than one server service is required, then numbers need to be consecutive and starting with 1

// Let's start a continuous remote API server service on port 19997:
portIndex1_port             = 19997
portIndex1_debug            = false
portIndex1_syncSimTrigger   = true

若要自行加入 rempte api 執行的 port 則在 server 的 child script 中設定:

Server 端:

simExtRemoteApiStart(19999)

Client 端:

clientID = vrep.simxStart('127.0.0.1', 19999, True, True, 5000, 5)

import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)

while True:
    choice = input("&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)





</t>
<t tx="yen.20170210170248.1"># -*- coding: utf-8 -*-
try:
    import vrep
except:
    print ('--------------------------------------------------------------')
    print ('"vrep.py" could not be imported. This means very probably that')
    print ('either "vrep.py" or the remoteApi library could not be found.')
    print ('Make sure both are in the same folder as this file,')
    print ('or appropriately adjust the file "vrep.py"')
    print ('--------------------------------------------------------------')
    print ('')

import time
import sys
import ctypes

print ('Program started')
vrep.simxFinish(-1)
clientID=vrep.simxStart('127.0.0.1',19999,True,True,5000,5)

if clientID!=-1:
    print ('Connected to remote API server')
else:
    print ('Failed connecting to remote API server')
    sys.exit('Program Ended')

    
nominalLinearVelocity = 0.3
wheelRadius           = 0.027
interWheelDistance    = 0.119
    
res,objs=vrep.simxGetObjects(clientID, vrep.sim_handle_all,vrep.simx_opmode_blocking)
if res==vrep.simx_return_ok:
    print ('Number of objects in the scene: ',len(objs))
else:
    print ('Remote API function call returned with error code: ',res)

time.sleep(2)

startTime=time.time()
vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_streaming)

res, display     = vrep.simxGetUIHandle(clientID, "sensorDisplay", vrep.simx_opmode_blocking)
res, leftSensor  = vrep.simxGetObjectHandle(clientID, "LeftSensor", vrep.simx_opmode_blocking)
res, middleSensor= vrep.simxGetObjectHandle(clientID, "MiddleSensor", vrep.simx_opmode_blocking)
res, rightSensor = vrep.simxGetObjectHandle(clientID, "RightSensor", vrep.simx_opmode_blocking)
res, leftJointDynamic  = vrep.simxGetObjectHandle(clientID, "DynamicLeftJoint" , vrep.simx_opmode_blocking)
res, rightJointDynamic = vrep.simxGetObjectHandle(clientID, "DynamicRightJoint", vrep.simx_opmode_blocking)

if res != vrep.simx_return_ok:
    print ('Failed to get sensor Handler')
    vrep.simxFinish(clientID)
    sys.exit('Program ended')

def setLeds(elHandle, left, middle, right):
    vrep.simxSetUIButtonProperty(clientID, elHandle,  8, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    vrep.simxSetUIButtonProperty(clientID, elHandle, 16, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    vrep.simxSetUIButtonProperty(clientID, elHandle, 24, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    if left:
        vrep.simxSetUIButtonProperty(clientID, elHandle, 8, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)
    if middle:
        vrep.simxSetUIButtonProperty(clientID, elHandle,16, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)
    if right:
        vrep.simxSetUIButtonProperty(clientID, elHandle,24, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)

sensorReading=[False, False, False]
sensorReading[0]=(vrep.simxReadVisionSensor(clientID, leftSensor,   vrep.simx_opmode_streaming )==1)
sensorReading[1]=(vrep.simxReadVisionSensor(clientID, middleSensor, vrep.simx_opmode_streaming )==1)
sensorReading[2]=(vrep.simxReadVisionSensor(clientID, rightSensor,  vrep.simx_opmode_streaming )==1)

while time.time() - startTime &lt; 50:
    returnCode,data=vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_buffer) # Try to retrieve the streamed data
    
    # Read the sensors:

    sensorReading[0]=(vrep.simxReadVisionSensor(clientID, leftSensor,   vrep.simx_opmode_buffer)[1])
    sensorReading[1]=(vrep.simxReadVisionSensor(clientID, middleSensor, vrep.simx_opmode_buffer)[1])
    sensorReading[2]=(vrep.simxReadVisionSensor(clientID, rightSensor,  vrep.simx_opmode_buffer)[1])
    
    setLeds(display,sensorReading[0],sensorReading[1],sensorReading[2])

    # Decide about left and right velocities:
    s = 1.0
    linearVelocityLeft  = nominalLinearVelocity * s
    linearVelocityRight = nominalLinearVelocity * s

    if not sensorReading[0]:
        linearVelocityLeft  = linearVelocityLeft*0.3
    if not sensorReading[2]:
        linearVelocityRight = linearVelocityRight*0.3

    vrep.simxSetJointTargetVelocity(clientID, leftJointDynamic, linearVelocityLeft/(s*wheelRadius), vrep.simx_opmode_oneshot)
    vrep.simxSetJointTargetVelocity(clientID, rightJointDynamic,linearVelocityRight/(s*wheelRadius), vrep.simx_opmode_oneshot)
    
    time.sleep(0.005)</t>
<t tx="yen.20170210172100.1"># -*- coding: utf-8 -*-
# http://www.cnblogs.com/21207-iHome/p/5955535.html
import vrep             # V-rep library
import sys      
import time
import math  

# This function will convert an angle to the equivalent rotation in the range [-pi,pi]
def ConfineAngle(angle):
    angle = angle % (2.0 * math.pi)
    if( angle &lt; -math.pi ):
        angle += (2.0 * math.pi)
    if( angle &gt; math.pi ):
        angle -= (2.0 * math.pi)
    return angle


def CalcIK():
    id = linkNum - 1
    while id &gt;= 0:
        retcode, J_pos = vrep.simxGetObjectPosition(clientID,joint_handle[id],-1,vrep.simx_opmode_oneshot_wait)
        retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
        
        # Get the vector from the current bone to the end effector position.
        curToEndX = tip[0] - J_pos[0]
        curToEndY = tip[1] - J_pos[1]
        curToEndMag = math.sqrt( curToEndX*curToEndX + curToEndY*curToEndY )
          
        # Get the vector from the current bone to the target position.
        curToTargetX = target[0] - J_pos[0];
        curToTargetY = target[1] - J_pos[1];
        curToTargetMag = math.sqrt(curToTargetX*curToTargetX+curToTargetY*curToTargetY)
          
        # Get rotation 
        endTargetMag = curToEndMag*curToTargetMag
        if endTargetMag &lt;= 0.0001:    # prevent division by small numbers
            cosRotAng = 1
            sinRotAng = 0
        else:
            cosRotAng = (curToEndX*curToTargetX + curToEndY*curToTargetY) / endTargetMag
            sinRotAng = (curToEndX*curToTargetY - curToEndY*curToTargetX) / endTargetMag
        
        # Clamp the cosine into range when computing the angle(might be out of rangedue to floating point error)
        rotAng = math.acos(max(-1, min(1,cosRotAng)))
        if  sinRotAng &lt; 0.0:
            rotAng = -rotAng
                
        q[id] = q[id] + rotAng
        
        # Rotate the current link
        if(id == 0):
            vrep.simxSetJointPosition(clientID,joint_handle[id], ConfineAngle(q[id])+math.pi/2, vrep.simx_opmode_oneshot)
        else:
            vrep.simxSetJointPosition(clientID,joint_handle[id], ConfineAngle(q[id]), vrep.simx_opmode_oneshot)
        
        # Check for termination
        retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
        endToTargetX = (target[0] - tip[0])
        endToTargetY = (target[1] - tip[1])
        error = math.sqrt(endToTargetX*endToTargetX + endToTargetY*endToTargetY)
        if( error &lt;= stol ):
            # We found a valid solution.
            return 1, error
        id = id - 1
        
    return 0, error  # cannot get to the target in this iteration
    
    
        
if __name__ == "__main__":
    # Starts a communication thread with the server
    clientID = vrep.simxStart('127.0.0.1', 20001, True, True, 5000, 5)
    
    # clientID: the client ID, or -1 if the connection to the server was not possible
    if clientID != -1:  #check if client connection successful
        print 'Connected to remote API server'
    else:
        print 'Connection not successful'
        sys.exit('Could not connect')    # Exit from Python


    # Retrieves an object handle based on its name.
    errorCode,tip_handle = vrep.simxGetObjectHandle(clientID,'tip',vrep.simx_opmode_oneshot_wait)
    errorCode,target_handle = vrep.simxGetObjectHandle(clientID,'target',vrep.simx_opmode_oneshot_wait)
    errorCode,consoleHandle = vrep.simxAuxiliaryConsoleOpen(clientID,'info',4,1+4,None,None,None,None,vrep.simx_opmode_oneshot_wait)
    joint_handle = [-1,-1,-1]    # store the joint handles
    for i in range(3):
        errorCode,joint_handle[i] = vrep.simxGetObjectHandle(clientID,'j'+str(i+1),vrep.simx_opmode_oneshot_wait)

    ilimit = 100    # maximum iteration
    stol = 1e-2     # tolerance
    q = [0,0,0]     # initial joint value
    linkNum = 3     # number of links
    
    retcode, target = vrep.simxGetObjectPosition(clientID,target_handle, -1, vrep.simx_opmode_oneshot_wait)
    retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
    
    count = 0    
    isOK = 0
    while ( not isOK ):    
        isOK,err = CalcIK()
        
        vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,None,vrep.simx_opmode_oneshot_wait) 
        count = count + 1
        vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,str(count)+' iterations err:'+str(err),vrep.simx_opmode_oneshot_wait)   
        
        if count &gt; ilimit:
            vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,"Solution wouldn't converge\r\n",vrep.simx_opmode_oneshot_wait)
            break
        #time.sleep(0.1)
    
    # Ends the communication thread. This should be the very last remote API function called on the client side
    vrep.simxFinish(clientID)</t>
<t tx="yen.20170210202015.1">simxCloseScene
simxCopyPasteObjects
simxCreateDummy
simxDisplayDialog
simxEndDialog 
simxEraseFile
simxFinish
simxGetArrayParameter
</t>
<t tx="yen.20170210221519.1">import vrep
import sys
import time

print('Program started')

portNb = 0
leftMotorHandle = 0
rightMotorHandle = 0
sensorHandle = 0

if len(sys.argv) &gt;= 5:
    portNb = int(sys.argv[1])
    leftMotorHandle = int(sys.argv[2])
    rightMotorHandle = int(sys.argv[3])
    sensorHandle = int(sys.argv[4])
else:
    print("Indicate following arguments: 'portNumber leftMotorHandle rightMotorHandle sensorHandle'")
    time.sleep(5000.0 / 1000.0)
    sys.exit(0)

vrep.simxFinish(-1) # just in case, close all opened connections
clientID = vrep.simxStart('127.0.0.1', portNb, True, True, 2000, 5)
if clientID != -1:
    print 'Connected to remote API server'
    driveBackStartTime = -99000
    motorSpeeds = [0, 0]

    while vrep.simxGetConnectionId(clientID) != -1:
        (errorCode, detectionState, detectedPoint, detectedObjectHandle, detectedSurfaceNormalVector) = vrep.simxReadProximitySensor(clientID, sensorHandle, vrep.simx_opmode_streaming)
        if errorCode == vrep.simx_return_ok:
            simulationTime = vrep.simxGetLastCmdTime(clientID)
            if simulationTime - driveBackStartTime &lt; 3000:
                motorSpeeds[0] = -3.1415 * 0.5
                motorSpeeds[1] = -3.1415 * 0.25
            else:
                motorSpeeds[0] = 3.1415
                motorSpeeds[1] = 3.1415
                if detectionState:
                    driveBackStartTime = simulationTime

            errorCode = vrep.simxSetJointTargetVelocity(clientID, leftMotorHandle, motorSpeeds[0], vrep.simx_opmode_oneshot)
            vrep.simxSetJointTargetVelocity(clientID, rightMotorHandle, motorSpeeds[1], vrep.simx_opmode_oneshot)
            if errorCode != vrep.simx_return_ok:
                print("SetJointTargetVelocity got error code: %s" % errorCode)

        else:
            print("ReadProximitySensor got error code: %s" % errorCode)

        time.sleep(5.0 / 1000.0)

    vrep.simxFinish(clientID)
else:
    print('Failed connecting to remote API server')
print('Program ended')</t>
<t tx="yen.20170210222733.1">##==============================================================#
## SECTION: Imports                                             #
##==============================================================#

import vrep

##==============================================================#
## SECTION: Class Definitions                                   #
##==============================================================#

class Robot:
    def __init__(self, client_id, opmode):
        self.cid = client_id
        self.op = opmode

        # Setup wheel joints.
        self.wj_locs = ["Left","Right"]
        self.wjs = {}
        for loc in self.wj_locs:
            name = "Dynamic{0}Joint".format(loc)
            _,h = vrep.simxGetObjectHandle(client_id, name, opmode)
            self.wjs[loc] = h

        # Setup vision sensors.
        self.vs_locs = ["Left","Middle","Right"]
        self.vss = {}
        for loc in self.vs_locs:
            name = "{0}Sensor".format(loc)
            _,h = vrep.simxGetObjectHandle(client_id, name, opmode)
            self.vss[loc] = h

    def set_wheel_vel(self, left, right):
        """Sets the wheel target velocities."""
        vrep.simxSetJointTargetVelocity(self.cid, self.wjs['Left'], left, self.op)
        vrep.simxSetJointTargetVelocity(self.cid, self.wjs['Right'], right, self.op)

    def get_wheel_vel(self):
        """Returns the wheel velocities as a list of (left,right)."""
        vels = []
        for loc in self.wj_locs:
            _,vel = vrep.simxGetObjectFloatParameter(self.cid, self.wjs[loc], vrep.sim_jointfloatparam_velocity, self.op)
            vels.append(vel)
        return vels

    def get_vis_sensors(self):
        """Returns a list of lists containing the average red/green/blue value
        from the left/middle/right vision sensor."""
        aves = []
        for loc in self.vs_locs:
            h = self.vss[loc]
            _,_,pkt = vrep.simxReadVisionSensor(client_id, h, opmode)
            aves.append(pkt[0][11:14])
        return aves

##==============================================================#
## SECTION: Function Definitions                                #
##==============================================================#

def is_green(a):
    """Returns true if the reading from Robot.get_vis_sensors() is green."""
    return (a[0] &lt; 0.4 and a[2] &lt; 0.4) and (a[1] &gt; 0.5)

##==============================================================#
## SECTION: Main Body                                           #
##==============================================================#

if __name__ == '__main__':
    vrep.simxFinish(-1) # Stop any running simulation.
    client_id = vrep.simxStart("127.0.0.1", 19997, True, True, 5000, 5)
    if client_id == -1:
        print("Failed to connect.")
        exit()
    print("Connected to V-REP.")
    print("Running robot logic, will exit when simulation is ended...")
    try:
        opmode = vrep.simx_opmode_blocking
        vrep.simxStartSimulation(client_id, opmode)
        robot = Robot(client_id, opmode)
        robot.set_wheel_vel(1.0, 1.0)
        vrep.simxSynchronousTrigger(client_id)
        while True:
            # Very simple robot line following logic.
            l,m,r = robot.get_vis_sensors()
            if is_green(m):
                robot.set_wheel_vel(1.0, 1.0)
            elif is_green(l):
                robot.set_wheel_vel(0.2, 1.0)
            elif is_green(r):
                robot.set_wheel_vel(1.0, 0.2)
            vrep.simxSynchronousTrigger(client_id)
    except:
        vrep.simxFinish(client_id)
        print("Simulation ended.")
</t>
<t tx="yen.20170215103217.1"></t>
<t tx="yen.20170215103228.1"></t>
</tnodes>
</leo_file>
